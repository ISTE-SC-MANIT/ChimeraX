{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Formik, Form, Field } from 'formik';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\n\nvar FormDialog = function FormDialog(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      setErrorMessage = _ref.setErrorMessage,\n      setSuccessMessage = _ref.setSuccessMessage;\n\n  // const [open, setOpen] = React.useState(false);\n  var _React$useState = React.useState({\n    email: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formData = _React$useState2[0],\n      setFormData = _React$useState2[1];\n\n  var router = useRouter();\n  var initialValues = {\n    email: ''\n  };\n\n  var handleChange = function handleChange(field) {\n    return function (e) {\n      setFormData(_objectSpread(_objectSpread({}, formData), {}, _defineProperty({}, field, e.target.value)));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    setFormData(_objectSpread({}, formData));\n    onClose();\n    axios.put(\"\".concat(process.env.NEXT_PUBLIC_BACKEND, \"/api/forgotpassword\"), _objectSpread({}, values)).then(function (response) {\n      setSuccessMessage('Reset Link has been sent to your mail');\n    })[\"catch\"](function (error) {\n      setErrorMessage(error.response.data.errors);\n      return error;\n    });\n  };\n\n  var handleClickOpen = function handleClickOpen() {\n    onClose();\n  };\n\n  var handleClose = function handleClose() {\n    onClose();\n  };\n\n  return __jsx(\"div\", null, __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \" Forgot Password ?\"), __jsx(DialogContent, null, __jsx(DialogContentText, null, \"Enter your email id , a reset link will be sent to your registered email id which will redirect you to update pass word page.\"), __jsx(Formik, {\n    onSubmit: function onSubmit(values) {\n      return handleSubmit(values);\n    },\n    initialValues: initialValues\n  }, __jsx(Form, {\n    id: \"myform\"\n  }, __jsx(Field, {\n    name: \"email\"\n  }, function (_ref2) {\n    var field = _ref2.field,\n        meta = _ref2.meta;\n    return __jsx(TextField, _extends({\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      required: true\n    }, field, {\n      error: !!(meta.touched && meta.error),\n      helperText: meta.touched ? meta.error : '',\n      variant: \"outlined\" // className={classes.field}\n      ,\n      margin: \"normal\",\n      type: \"email\"\n    }));\n  }), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancel\"), __jsx(Button, {\n    type: \"submit\",\n    color: \"primary\"\n  }, \"Submit\")))))));\n};\n\nexport default FormDialog;","map":null,"metadata":{},"sourceType":"module"}