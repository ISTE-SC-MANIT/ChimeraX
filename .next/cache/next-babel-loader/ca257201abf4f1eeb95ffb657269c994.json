{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from \"@material-ui/core/Box\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      flexGrow: 1,\n      width: \"100%\"\n    },\n    paper: {\n      padding: theme.spacing(2, 1),\n      textAlign: 'center',\n      //    color: theme.palette.text.secondary,\n      height: theme.spacing(5),\n      width: theme.spacing(5),\n      position: 'relative',\n      borderRadius: \"50%\",\n      //   backgroundColor:\"blue\",\n      color: \"white\"\n    },\n    box: {\n      position: \"absolute\",\n      left: \"50%\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      WebkitTransform: \"translate(-50%, -50%)\"\n    }\n  });\n});\n\nvar Stats = function Stats(_ref) {\n  var reviewedAnswers = _ref.reviewedAnswers,\n      visitedAnswers = _ref.visitedAnswers,\n      answers = _ref.answers;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      answered = _React$useState2[0],\n      setAnswered = _React$useState2[1];\n\n  React.useEffect(function () {\n    var a = 0;\n    answers.map(function (ans) {\n      if (Boolean(ans.answer)) {\n        a++;\n      }\n\n      setAnswered(a);\n    });\n  }, [answers]);\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Box, {\n    mb: 2\n  }, __jsx(ListItemText, {\n    primary: \"Statistics\",\n    secondary: \"Keep a track of your responses\",\n    primaryTypographyProps: {\n      variant: \"h6\"\n    }\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Box, {\n    display: \"flex\"\n  }, __jsx(Paper, {\n    className: classes.paper,\n    style: {\n      background: \"green\"\n    },\n    elevation: 6\n  }, __jsx(Box, {\n    className: classes.box\n  }, answered)), __jsx(Box, {\n    mt: 1,\n    ml: 2\n  }, \"Answered\"))), __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Box, {\n    display: \"flex\"\n  }, __jsx(Paper, {\n    className: classes.paper,\n    style: {\n      background: \"red\"\n    },\n    elevation: 6\n  }, __jsx(Box, {\n    className: classes.box\n  }, visitedAnswers.length - answered)), __jsx(Box, {\n    mt: 1,\n    ml: 2\n  }, \"Visited & Not Answered\")))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    spacing: 2,\n    style: {\n      marginTop: \"8px\"\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Box, {\n    display: \"flex\"\n  }, __jsx(Paper, {\n    className: classes.paper,\n    style: {\n      background: \"blue\"\n    },\n    elevation: 6\n  }, __jsx(Box, {\n    className: classes.box\n  }, reviewedAnswers.length)), __jsx(Box, {\n    mt: 1,\n    ml: 2\n  }, \"Marked for review\"))), __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Box, {\n    display: \"flex\"\n  }, __jsx(Paper, {\n    className: classes.paper,\n    style: {\n      color: \"black\"\n    },\n    elevation: 6\n  }, __jsx(Box, {\n    className: classes.box\n  }, 30 - visitedAnswers.length)), __jsx(Box, {\n    mt: 1,\n    ml: 2\n  }, \"Not visited\"))))));\n};\n\nexport default Stats;","map":null,"metadata":{},"sourceType":"module"}