{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport clsx from \"clsx\";\nimport ThemeToggleButton from \"../components/theme/modeToggle\";\nimport ImportantDevicesIcon from \"@material-ui/icons/ImportantDevices\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport GamepadIcon from \"@material-ui/icons/Gamepad\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport { useRouter } from \"next/dist/client/router\";\nimport cookie from \"js-cookie\";\nimport VerticalStepper from \"./VerticalStepper\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  paper: {\n    justifyContent: \"space-between\",\n    overflow: \"hidden\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: 0\n  },\n  mobileMenu: {\n    position: \"fixed\",\n    top: theme.spacing(1),\n    left: theme.spacing(2),\n    zIndex: theme.zIndex.drawer\n  },\n  upperHalf: {},\n  lowerHalf: {}\n}));\n\nconst CustomDrawer = ({\n  name,\n  username,\n  open,\n  setOpen,\n  setSuccessMessage,\n  setErrorMessage\n}) => {\n  // const [open, setOpen] = React.useState(false);\n  const classes = useStyles({\n    open\n  });\n  const router = useRouter();\n  const icons = [{\n    label: 'Contest',\n    icon: __jsx(GamepadIcon, null),\n    onClick: () => {\n      router.push('/protectedPages/dashboard');\n    }\n  }, {\n    label: 'Dashboard',\n    icon: __jsx(DashboardIcon, null),\n    onClick: () => {\n      router.push('/protectedPages/dashboard');\n    }\n  }, {\n    label: 'Update Info',\n    icon: __jsx(InfoIcon, null),\n    onClick: () => {\n      router.push('/protectedPages/updateProfile');\n    }\n  }, {\n    label: 'Leader-Board',\n    icon: __jsx(ImportantDevicesIcon, null),\n    onClick: () => {\n      router.push('/protectedPages/dashboard');\n    }\n  }, {\n    label: 'Log Out',\n    icon: __jsx(ExitToAppIcon, null),\n    onClick: () => {\n      setSuccessMessage('Logged out');\n      cookie.remove('authorization');\n      router.push('/');\n    }\n  }];\n  return __jsx(React.Fragment, null, __jsx(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: open,\n      [classes.drawerClose]: !open\n    }),\n    classes: {\n      paper: clsx(classes.paper, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })\n    }\n  }, __jsx(\"div\", null, __jsx(Box, {\n    paddingTop: 2,\n    paddingBottom: 2,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  }, __jsx(Avatar, null, name.charAt(0)), __jsx(Fade, {\n    in: open\n  }, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, name)), __jsx(Fade, {\n    in: open\n  }, __jsx(Typography, {\n    variant: \"subtitle2\"\n  }, username))), __jsx(Divider, null), __jsx(Box, null, __jsx(VerticalStepper, null)), __jsx(Divider, null)), __jsx(\"div\", null, __jsx(Fade, {\n    in: open\n  }, __jsx(Box, {\n    paddingBottom: 2,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(ThemeToggleButton, null))), __jsx(Divider, null), __jsx(Box, {\n    height: 50,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }, __jsx(IconButton, {\n    onClick: () => setOpen(o => !o)\n  }, !open ? __jsx(ChevronRightIcon, null) : __jsx(ChevronLeftIcon, null))))));\n};\n\nexport default CustomDrawer;","map":null,"metadata":{},"sourceType":"module"}