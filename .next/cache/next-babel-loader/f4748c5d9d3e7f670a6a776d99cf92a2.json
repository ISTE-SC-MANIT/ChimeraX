{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport QuizPage from \"../../components/quizPage\";\nimport Instructions from \"../../components/instructions\";\nimport query from \"../../components/relay/queries/GetQuizStatusQuery\";\nimport { useQuery } from \"relay-hooks\";\nimport LoadingScreen from \"../../components/loadingScreen\";\nimport StartQuizMutation from \"../../components/relay/mutations/StartQuizMutation\";\nimport { useRouter } from \"next/router\";\n\nconst Team = ({\n  viewer,\n  environment,\n  setSuccessMessage,\n  refetch,\n  setErrorMessage\n}) => {\n  const [startQuiz, setStartQuiz] = React.useState(false);\n  const {\n    data,\n    error,\n    isLoading,\n    retry\n  } = useQuery(query);\n  const router = useRouter();\n  React.useEffect(() => {\n    if (viewer.step === \"REGISTER\") {\n      router.push(\"/register\");\n    }\n\n    if (viewer.step === \"PAYMENT\") {\n      router.push(\"/payment\");\n    }\n\n    if (viewer.step === \"TEST\") {}\n\n    if (viewer.step === \"CHOOSE_TEAM\") {\n      router.push(\"/team\");\n    }\n  }, []);\n  React.useEffect(() => {\n    if (Boolean(data)) {\n      setStartQuiz(data.getQuizDetails.userQuizStatus === \"STARTED\" ? true : false);\n    }\n  }, [data]);\n\n  if (isLoading) {\n    return __jsx(LoadingScreen, {\n      loading: true\n    });\n  }\n\n  const handleStartQuiz = () => {\n    StartQuizMutation(environment, {\n      onCompleted: () => {\n        setSuccessMessage(\"Quiz has Started\");\n        setStartQuiz(true);\n      },\n      onError: () => {\n        setErrorMessage(\"Something went wrong\");\n      }\n    });\n  };\n\n  return startQuiz ? __jsx(QuizPage, {\n    viewer: viewer,\n    environment: environment,\n    setSuccessMessage: setSuccessMessage,\n    refetch: refetch,\n    setErrorMessage: setErrorMessage\n  }) : __jsx(React.Fragment, null, __jsx(Instructions, {\n    viewer: viewer,\n    environment: environment,\n    setSuccessMessage: setSuccessMessage,\n    refetch: refetch,\n    setErrorMessage: setErrorMessage\n  }), __jsx(Grid, {\n    container: true,\n    spacing: 0,\n    alignItems: \"center\",\n    justify: \"center\"\n  }, __jsx(Box, null, __jsx(Button, {\n    onClick: handleStartQuiz,\n    disabled: true,\n    variant: \"contained\",\n    color: \"primary\"\n  }, \"Start Quiz\"))));\n};\n\nexport default Team;","map":null,"metadata":{},"sourceType":"module"}