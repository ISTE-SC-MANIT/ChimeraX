{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport CreateOrder from \"../../components/relay/mutations/CreateOrderMutation\";\nimport PayOrder from \"../../components/relay/mutations/PayOrderMutation\";\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Image from 'next/image';\nimport { loadScript } from '../../components/utils';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CustomDrawer from '../../components/customDrawer';\nimport Navbar from '../../components/Navbar';\nimport { useQuery } from 'relay-hooks';\nimport query from \"../../components/relay/queries/GetTeamDetailsQuery\";\nimport LoadingScreen from '../../components/loadingScreen';\nimport { useRouter } from 'next/router';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '100vh'\n  },\n  image: {\n    backgroundImage: `url('/Vector3.png')`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    [theme.breakpoints.down('md')]: {\n      backgroundColor: `#3997F5`\n    },\n    [theme.breakpoints.down('xs')]: {\n      minHeight: '60vh',\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900]\n    }\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  heading: {\n    textAlign: 'center',\n    width: 'fit-content',\n    margin: 'auto',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2)\n  },\n  input: {\n    width: '50%',\n    marginLeft: 20\n  },\n  box: {\n    paddingLeft: 20,\n    marginBottom: theme.spacing(2)\n  },\n  button: {\n    width: 'fit-content',\n    margin: 'auto'\n  },\n  listItem: {\n    marginBottom: 0\n  },\n  leftGrid: {\n    [theme.breakpoints.up('md')]: {\n      paddingLeft: theme.spacing(8)\n    }\n  }\n}));\n\nconst VectorImg = classes => {\n  const theme = useTheme();\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\n\n  if (mobile) {\n    return __jsx(Box, {\n      className: classes.vector\n    }, __jsx(Image, {\n      src: \"/payment.png\",\n      alt: \"logo\",\n      className: classes.imageV,\n      width: window.innerWidth,\n      height: window.innerWidth / 1.46\n    }));\n  }\n\n  return __jsx(Box, {\n    className: classes.vector\n  }, __jsx(Image, {\n    src: \"/payment.png\",\n    alt: \"logo\",\n    className: classes.imageV,\n    width: 500,\n    height: 394\n  }));\n};\n\nconst Payment = ({\n  viewer,\n  environment,\n  setSuccessMessage,\n  setErrorMessage,\n  refetch\n}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [teamName, setTeamName] = React.useState(\"\");\n  const router = useRouter();\n  React.useEffect(() => {\n    if (viewer.step === \"REGISTER\") {}\n\n    if (viewer.step === \"PAYMENT\") {\n      router.push(\"/dashboard/payment\");\n    }\n\n    if (viewer.step === \"TEST\") {\n      router.push(\"/dashboard/test\");\n    }\n\n    if (viewer.step === \"CHOOSE_TEAM\") {\n      router.push(\"/dashboard/team\");\n    }\n  }, []);\n  const {\n    data,\n    error,\n    retry,\n    isLoading\n  } = useQuery(query);\n\n  if (isLoading) {\n    return __jsx(LoadingScreen, {\n      loading: true\n    });\n  }\n\n  const handleSuccess = res => {\n    const {\n      name,\n      email,\n      phone\n    } = viewer;\n    const options = {\n      key: process.env.NEXT_PUBLIC_RAZORPAY_KEY,\n      currency: res.createOrder.currency,\n      amount: res.createOrder.amount,\n      order_id: res.createOrder.id,\n      name: 'ISTE SC MANIT',\n      description: 'Payment for chimera x',\n      handler: function (response) {\n        PayOrder(environment, {\n          paymentId: response.razorpay_payment_id\n        }, {\n          onCompleted: () => {\n            setSuccessMessage('Payment Successful'), refetch();\n            router.push(\"/dashboard/test\");\n          },\n          onError: () => setErrorMessage('Payment Failed')\n        });\n      },\n      prefill: {\n        name,\n        email,\n        mobile: phone\n      }\n    };\n    const _window = window;\n    const paymentObject = new _window.Razorpay(options);\n    paymentObject.open();\n  };\n\n  const handleRazorpay = async () => {\n    const res = await loadScript('https://checkout.razorpay.com/v1/checkout.js');\n\n    if (!res) {\n      alert('Razorpay SDK failed to load. Are you online?');\n      setErrorMessage('Payment Failed');\n      return;\n    }\n\n    CreateOrder(environment, {\n      teamName: ''\n    }, {\n      onCompleted: res => handleSuccess(res),\n      onError: () => setErrorMessage('Payment Failed')\n    });\n  };\n\n  const disable = !Boolean(teamName) || Boolean(viewer.role === \"TEAM_HELPER\");\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(CustomDrawer, {\n    name: viewer.name,\n    username: viewer.email,\n    open: open,\n    setOpen: setOpen,\n    setSuccessMessage: setSuccessMessage,\n    setErrorMessage: setErrorMessage\n  }), __jsx(Navbar, {\n    setOpen: setOpen,\n    setSuccessMessage: setSuccessMessage,\n    setErrorMessage: setErrorMessage\n  }), __jsx(Grid, {\n    container: true,\n    component: \"main\",\n    onClick: () => setOpen(false)\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    sm: 8,\n    md: 6,\n    className: classes.leftGrid\n  }, __jsx(Box, {\n    className: classes.heading\n  }, __jsx(Typography, {\n    variant: \"h4\"\n  }, __jsx(\"b\", null, \"Step-3 , Payment for Chimera-X 2021\"))), __jsx(Box, null, __jsx(List, null, __jsx(ListItem, {\n    alignItems: \"flex-start\"\n  }, __jsx(ListItemText, {\n    className: classes.listItem,\n    primary: \"Enter your team name\",\n    secondary: __jsx(React.Fragment, null, 'You / your team will be recognized by your Team name '),\n    primaryTypographyProps: {\n      variant: 'h6'\n    }\n  })))), __jsx(Box, null, __jsx(TextField // fullWidth\n  , {\n    value: teamName,\n    onChange: e => {\n      setTeamName(e.target.value);\n    },\n    className: classes.input,\n    size: \"small\",\n    id: \"password-input\",\n    label: \"Enter Team Name\",\n    required: true,\n    variant: \"outlined\",\n    margin: \"normal\"\n  })), __jsx(Divider, null), __jsx(Box, null, __jsx(ListItem, {\n    alignItems: \"flex-start\"\n  }, __jsx(ListItemText, {\n    primary: \"Verify your team details\",\n    secondary: __jsx(React.Fragment, null, 'Check your team details, if anything looks wrong contact us'),\n    primaryTypographyProps: {\n      variant: 'h6'\n    }\n  }))), __jsx(Box, {\n    display: \"flex\",\n    className: classes.box\n  }, __jsx(Typography, null, ' ', __jsx(\"b\", null, \"Team Status :\"), \" \\xA0\"), __jsx(Typography, null, \" \", data.getTeamDetails.status, \" \")), __jsx(Box, {\n    display: \"flex\",\n    className: classes.box\n  }, __jsx(Typography, null, __jsx(\"b\", null, \" Team Leader :\"), \" \\xA0\"), __jsx(Typography, null, ' ', data.getTeamDetails.teamLeader.name, \" (\", data.getTeamDetails.teamLeader.email, \")\", ' ')), data.getTeamDetails.status === 'TEAM' && __jsx(Box, {\n    display: \"flex\",\n    className: classes.box\n  }, __jsx(Typography, null, __jsx(\"b\", null, \" Paired With :\"), \" \\xA0\"), __jsx(Typography, null, ' ', data.getTeamDetails.teamHelper.name, \" (\", data.getTeamDetails.teamHelper.email, \")\")), __jsx(Divider, null), __jsx(Box, null, __jsx(ListItem, {\n    alignItems: \"flex-start\"\n  }, __jsx(ListItemText, {\n    primary: \"Complete your payment\",\n    primaryTypographyProps: {\n      variant: 'h6'\n    }\n  }))), __jsx(Box, null, __jsx(\"img\", {\n    src: \"/razorpay.png\",\n    width: \"180px\",\n    className: classes.box\n  })), __jsx(Box, null, __jsx(Grid, {\n    container: true,\n    className: classes.box,\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Typography, {\n    variant: \"h6\"\n  }, __jsx(\"b\", null, \"AMOUNT\"), \"\\xA0\")), __jsx(Grid, {\n    item: true,\n    xs: 6\n  }, __jsx(Typography, {\n    variant: \"h6\"\n  }, __jsx(\"b\", null, \" \\u20B9 100 \")))), __jsx(Grid, {\n    container: true,\n    alignItems: \"center\"\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Box, null, __jsx(ListItem, null, __jsx(ListItemIcon, null, __jsx(Checkbox, {\n    color: \"primary\"\n  })), __jsx(ListItemText, {\n    primary: __jsx(React.Fragment, null, \"I agree to the \", __jsx(Link, null, \"Terms & Conditions\"), \" of ISTE-SC-MANIT\", ' ')\n  })), viewer.role === 'TEAM_HELPER' && __jsx(Typography, null, \"Please ask your team leader to complete payment\"))), __jsx(Grid, {\n    item: true,\n    xs: 12\n  }, __jsx(Box, {\n    className: classes.box\n  }, __jsx(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleRazorpay,\n    disabled: disable\n  }, \"Proceed for payment\")))))), __jsx(Grid, {\n    item: true,\n    container: true,\n    xs: 12,\n    sm: 4,\n    md: 6,\n    className: classes.image,\n    justify: \"center\",\n    alignItems: \"flex-end\"\n  }, __jsx(VectorImg, {\n    classes: classes\n  }))));\n};\n\nexport default Payment;","map":null,"metadata":{},"sourceType":"module"}