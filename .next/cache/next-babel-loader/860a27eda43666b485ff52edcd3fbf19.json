{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Box from \"@material-ui/core/Box\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2, 1),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: theme.spacing(8),\n      width: theme.spacing(8),\n      position: 'relative',\n      borderRadius: \"50%\",\n      cursor: \"pointer\",\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    box: {\n      position: \"absolute\",\n      left: \"50%\",\n      top: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      WebkitTransform: \"translate(-50%, -50%)\"\n    }\n  });\n});\n\nvar QuestionPanel = function QuestionPanel(_ref) {\n  var questions = _ref.questions,\n      onQuestionClick = _ref.onQuestionClick,\n      currentQuestion = _ref.currentQuestion,\n      visitedAnswers = _ref.visitedAnswers,\n      reviewedAnswers = _ref.reviewedAnswers,\n      answers = _ref.answers;\n  var classes = useStyles();\n\n  var getColor = function getColor(questionNo, questionId) {\n    if (questionNo === currentQuestion.questionNo) {\n      return {\n        background: \"#2196F3\",\n        color: \"#FFFFFF\"\n      };\n    }\n\n    var markedForReview = reviewedAnswers.find(function (answer) {\n      return answer === questionId;\n    });\n\n    if (Boolean(markedForReview)) {\n      return {\n        background: \"blue\",\n        color: \"white\"\n      };\n    }\n\n    var isVisitedQuestion = visitedAnswers.find(function (answer) {\n      return answer === questionId;\n    });\n\n    if (Boolean(isVisitedQuestion)) {\n      var answeredQuestion = answers.find(function (a) {\n        return a.questionId === questionId;\n      });\n\n      if (Boolean(answeredQuestion.answer)) {\n        return {\n          background: \"#1FAA59\",\n          color: \"white\"\n        };\n      }\n\n      return {\n        background: \"red\",\n        color: \"white\"\n      };\n    }\n\n    return {\n      background: null,\n      color: null\n    };\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Box, {\n    mb: 2\n  }, __jsx(ListItemText, {\n    primary: \"Questions\",\n    secondary: \"Click on question number to view the question\",\n    primaryTypographyProps: {\n      variant: \"h6\"\n    }\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 1\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    spacing: 2\n  }, questions.map(function (question) {\n    return __jsx(Grid, {\n      item: true\n    }, __jsx(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      style: {\n        backgroundColor: getColor(question.questionNo, question.id).background,\n        color: getColor(question.questionNo, question.id).color\n      },\n      onClick: function onClick() {\n        return onQuestionClick(question.questionNo);\n      }\n    }, __jsx(Box, {\n      className: classes.box\n    }, question.questionNo)));\n  }))));\n};\n\nexport default QuestionPanel;","map":null,"metadata":{},"sourceType":"module"}