{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n// @ts-nocheck\n\n/*\nquery GetUserQuery {\n  getSingleUsers {\n    _id\n    name\n    email\n    id\n    phone\n    registered\n    strategy\n    role\n    city\n  }\n}\n*/\nvar node = function () {\n  var v0 = [{\n    \"alias\": null,\n    \"args\": null,\n    \"concreteType\": \"User\",\n    \"kind\": \"LinkedField\",\n    \"name\": \"getSingleUsers\",\n    \"plural\": true,\n    \"selections\": [{\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"_id\",\n      \"storageKey\": null\n    }, {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    }, {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"email\",\n      \"storageKey\": null\n    }, {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"id\",\n      \"storageKey\": null\n    }, {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"phone\",\n      \"storageKey\": null\n    }, {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"registered\",\n      \"storageKey\": null\n    }, {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"strategy\",\n      \"storageKey\": null\n    }, {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"role\",\n      \"storageKey\": null\n    }, {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"city\",\n      \"storageKey\": null\n    }],\n    \"storageKey\": null\n  }];\n  return {\n    \"fragment\": {\n      \"argumentDefinitions\": [],\n      \"kind\": \"Fragment\",\n      \"metadata\": null,\n      \"name\": \"GetUserQuery\",\n      \"selections\": v0\n      /*: any*/\n      ,\n      \"type\": \"Query\",\n      \"abstractKey\": null\n    },\n    \"kind\": \"Request\",\n    \"operation\": {\n      \"argumentDefinitions\": [],\n      \"kind\": \"Operation\",\n      \"name\": \"GetUserQuery\",\n      \"selections\": v0\n      /*: any*/\n\n    },\n    \"params\": {\n      \"cacheID\": \"aa75daa53a2bcc7d0386e2772ae25a1a\",\n      \"id\": null,\n      \"metadata\": {},\n      \"name\": \"GetUserQuery\",\n      \"operationKind\": \"query\",\n      \"text\": \"query GetUserQuery {\\n  getSingleUsers {\\n    _id\\n    name\\n    email\\n    id\\n    phone\\n    registered\\n    strategy\\n    role\\n    city\\n  }\\n}\\n\"\n    }\n  };\n}();\n\nnode.hash = '842b9dd9bca94dc04277f6ed2c2530d4';\nexport default node;","map":null,"metadata":{},"sourceType":"module"}