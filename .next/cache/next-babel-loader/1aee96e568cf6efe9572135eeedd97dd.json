{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AcceptInvitationMutation from \"../components/relay/mutations/AcceptInvitationMutation\";\nimport { useRouter } from 'next/router';\n\nconst AcceptInvitation = ({\n  name,\n  userId,\n  invitationId,\n  environment,\n  open,\n  handleClose,\n  setSuccessMessage,\n  setErrorMessage,\n  refetch\n}) => {\n  const router = useRouter();\n\n  const handleSubmit = () => {\n    const input = {\n      invitationId,\n      receiverId: userId\n    };\n    AcceptInvitationMutation(environment, input, {\n      onCompleted: () => {\n        setSuccessMessage('Teammate Selected');\n        router.push('/dashboard/payment');\n        refetch();\n      },\n      onError: err => {\n        setErrorMessage(err.message);\n      }\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, __jsx(DialogTitle, {\n    id: \"alert-dialog-title\"\n  }, `Accept Invitation from ${name}?`), __jsx(DialogContent, null, __jsx(DialogContentText, {\n    id: \"alert-dialog-description\"\n  }, \"Please note. Accepting this invitation is irreversible. You will not be able to send or recieve invitations after accepting and your team will be confirmed. Proceed with caution.\")), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Disagree\"), __jsx(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    autoFocus: true\n  }, \"Agree\"))));\n};\n\nexport default AcceptInvitation;","map":null,"metadata":{},"sourceType":"module"}