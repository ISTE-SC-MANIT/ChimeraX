"""Exposes a URL that specifies the behaviour of this scalar."""
directive @specifiedBy(
  """The URL that specifies the behaviour of this scalar."""
  url: String!
) on SCALAR

input AcceptInvitationInput {
  invitationId: String!
  receiverId: String!
}

input DeleteInvitationInput {
  invitationId: String!
}

type Invitation {
  _id: String
  id: String!
  sendersId: String!
  sendersName: String!
  sendersEmail: String!
  receiversName: String!
  receiversEmail: String!
  receiversId: String!
  status: Status!
}

input InvitationInput {
  receiverId: String!
  receiverName: String!
  receiverEmail: String!
}

type InvitationResponse {
  sentInvitations: [Invitation!]!
  receivedInvitations: [Invitation!]!
}

type Mutation {
  registerUser(userInfo: UserInput!): User!
  sendInvitation(invitationInput: InvitationInput!): Invitation!
  acceptInvitation(acceptInvitationInput: AcceptInvitationInput!): Team!
  deleteInvitation(deleteInvitationInput: DeleteInvitationInput!): Invitation!
  playAsIndividual: Team!
}

"""payment status of team"""
enum PaymentStatus {
  PAID
  UNPAID
}

type Query {
  viewer: User!
  getInvitations: InvitationResponse!
  getSingleUsers: [User!]!
}

"""role of user in team"""
enum Role {
  TEAM_LEADER
  TEAM_HELPER
  NOT_INITIALIZED
}

"""status of invitation"""
enum Status {
  ACCEPTED
  REJECTED
  PENDING
}

"""Step on which user is present"""
enum Step {
  REGISTER
  CHOOSE_TEAM
  PAYMENT
  TEST
}

type Team {
  _id: String
  id: String!
  teamLeadersId: String!
  invitationId: String!
  teamHelpersId: String
  teamName: String
  city: String
  teamStatus: TeamStatus!
  status: PaymentStatus!
}

"""tells wether player is individual or team"""
enum TeamStatus {
  INDIVIDUAL
  TEAM
  NOT_INITIALIZED
}

type User {
  _id: String
  id: String!
  password: String!
  name: String!
  email: String!
  phone: String!
  college: String
  year: Int!
  strategy: String!
  registered: Boolean!
  city: String!
  resetPasswordLink: String!
  teamId: String!
  step: Step!
  role: Role!
  teamStatus: TeamStatus!
}

input UserInput {
  name: String
  phone: String
  year: Float
  country: String
  college: String
}

